image: rust:1.75

default:
  tags:
    - docker
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .target/

stages:
  - build
  - lint
  - deploy

build:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - cargo build
  artifacts:
    paths:
      - target/

lint:
  stage: lint
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - cargo clippy

#package:
#  stage: deploy
#  image: docker:24.0.5
#  services:
#    - docker:24.0.5-dind
#  before_script:
#    - docker info
#  variables:
#    DOCKER_TLS_CERTDIR: "/certs"
#    IMAGE_NAME: "$CI_REGISTRY_IMAGE/rusters:latest"
#  script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
#    - docker build --target final -t "$IMAGE_NAME" .
#    - docker push "$IMAGE_NAME"
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

push:
  stage: deploy
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
    - apk update
    - apk upgrade
    - apk add bash make py-pip
    - apk add --virtual gcc musl-dev python3-dev libffi-dev openssl-dev cargo make
    - pip install azure-cli
    - apk del --purge build
#  needs:
#    - job: package
#      artifacts: false
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: "teamacr000cee89641c6587.azurecr.io/rusters:latest"
  script:
    - az login --tenant $AZURE_TENANT_ID --service-principal -u $AZURE_CLIENT_ID --federated-token $CI_JOB_JWT_V2
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - az acr login -n teamacr7eb5d0df4be7ded7
    - docker build --target final -t "$IMAGE_NAME" .
    - docker push "$IMAGE_NAME"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
